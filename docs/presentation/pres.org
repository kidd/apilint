#+TITLE: cAPItan
#+DATE: <2015-02-20 Fri>
#+AUTHOR: Raimon Grau & Toni Reina
#+EMAIL: rgrau@3scale.net & toni@3scale.net
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:nil arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:nil p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:nil todo:t |:t
#+CREATOR: Emacs 25.0.50.1 (Org mode 8.2.10)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+REVEAL_THEME: black

* Revolution
  [[file:adoption.png][file:adoption.png]]

* But this comes at a cost...
  - Explosion of adoption
  - Adopters from different areas
  - Adopters of different knowledge
  - Not Invented Here syndrome

* Ruby

    [[file:ruby-code.png][file:ruby-code.png]]

* With Apis

* Convergence
  - Standarization of styles.
  - Follow best practices
  - Recognized authorities

* We're there (kinda)
  - Ruby has its own style guide (powered by thoughtbot)
  - SCSS has it too
  - js has it too (airbnb)
  - Scientific publications have it too
  - APIs have it too (provided by heroku, but still settling)
# TODO github stars

* And we got smarter...
  So we made it automatic, so apps can check code looking for code red
  flags.
  - Rubocop
  # TODO github stars

  - But no checker for APIs

* Sooo....
  Until now....

* cAPItan Canario
  # TODO foto capitan canario

* (codename apilint)
  - Given a collection of request-response pairs, automatically
    detects red flags or warns about bad practices on that API.
    - Apitools, Apicast, Rack Middleware, swagger,
      rspec_api_documentation...
  - Lints are the individual checkers for each style element.
    - Which are configurable, and also activable/deactivable
  - It's easy to create your own lints

* Pray for the Demo Gods

* Q & A
